%!PS-Adobe-2.0 EPSF-2.0
%%Title: valencia_mutual_information00.eps
%%Creator: gnuplot 5.0 patchlevel 6
%%CreationDate: Fri Aug  7 19:06:35 2020
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (valencia_mutual_information00.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 6)
  /Author (francescocarnazza)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Aug  7 19:06:35 2020)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
588 384 M
63 0 V
6332 0 R
-63 0 V
stroke
516 384 M
[ [(Helvetica) 120.0 0.0 true true 0 (-0.2)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 948 M
63 0 V
6332 0 R
-63 0 V
stroke
516 948 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 1512 M
63 0 V
6332 0 R
-63 0 V
stroke
516 1512 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 2076 M
63 0 V
6332 0 R
-63 0 V
stroke
516 2076 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 2640 M
63 0 V
6332 0 R
-63 0 V
stroke
516 2640 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 3203 M
63 0 V
6332 0 R
-63 0 V
stroke
516 3203 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 3767 M
63 0 V
6332 0 R
-63 0 V
stroke
516 3767 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 4331 M
63 0 V
6332 0 R
-63 0 V
stroke
516 4331 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.2)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 4895 M
63 0 V
6332 0 R
-63 0 V
stroke
516 4895 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.4)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 384 M
0 63 V
0 4448 R
0 -63 V
stroke
588 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1228 384 M
0 63 V
0 4448 R
0 -63 V
stroke
1228 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1867 384 M
0 63 V
0 4448 R
0 -63 V
stroke
1867 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2507 384 M
0 63 V
0 4448 R
0 -63 V
stroke
2507 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3146 384 M
0 63 V
0 4448 R
0 -63 V
stroke
3146 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3786 384 M
0 63 V
0 4448 R
0 -63 V
stroke
3786 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4425 384 M
0 63 V
0 4448 R
0 -63 V
stroke
4425 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.2)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5065 384 M
0 63 V
0 4448 R
0 -63 V
stroke
5065 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.4)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5704 384 M
0 63 V
0 4448 R
0 -63 V
stroke
5704 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.6)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
6343 384 M
0 63 V
0 4448 R
0 -63 V
stroke
6343 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.8)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
6983 384 M
0 63 V
0 4448 R
0 -63 V
stroke
6983 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 2)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
588 4895 N
588 384 L
6395 0 V
0 4511 V
-6395 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
96 2639 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (mutual information)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
3785 84 M
[ [(Helvetica) 120.0 0.0 true true 0 (time)]
] -40.0 MCshow
LTb
% Begin plot #1
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
6416 4772 M
[ [(Helvetica) 120.0 0.0 true true 0 (statevector)]
] -40.0 MRshow
1.000 UL
LTb
0.58 0.00 0.83 C 6488 4772 M
351 0 V
620 989 M
32 93 V
32 130 V
32 158 V
32 180 V
32 195 V
32 206 V
32 214 V
32 219 V
32 219 V
32 219 V
32 214 V
32 208 V
32 201 V
32 191 V
32 179 V
32 168 V
32 154 V
32 139 V
32 125 V
31 109 V
32 94 V
32 79 V
32 63 V
32 48 V
32 34 V
32 20 V
32 8 V
32 -3 V
32 -14 V
32 -23 V
32 -30 V
32 -36 V
32 -39 V
32 -42 V
32 -43 V
32 -42 V
32 -40 V
32 -35 V
32 -30 V
32 -24 V
32 -17 V
32 -8 V
32 -1 V
32 8 V
32 15 V
32 23 V
32 30 V
32 34 V
32 39 V
32 42 V
32 43 V
32 42 V
32 40 V
32 37 V
32 31 V
32 23 V
32 15 V
32 5 V
32 -6 V
31 -19 V
32 -32 V
32 -46 V
32 -61 V
32 -77 V
32 -92 V
32 -107 V
32 -123 V
32 -137 V
32 -152 V
32 -166 V
32 -178 V
32 -189 V
32 -200 V
32 -207 V
32 -214 V
32 -218 V
32 -219 V
32 -219 V
32 -215 V
32 -208 V
32 -197 V
32 -181 V
32 -161 V
32 -134 V
32 -100 V
32 -49 V
32 31 V
32 87 V
32 127 V
32 154 V
32 177 V
32 193 V
32 205 V
32 214 V
32 218 V
32 219 V
32 219 V
32 215 V
32 209 V
31 202 V
32 192 V
32 181 V
stroke 3881 3792 M
32 169 V
32 156 V
32 142 V
32 126 V
32 112 V
32 96 V
32 80 V
32 65 V
32 50 V
32 36 V
32 22 V
32 10 V
32 -2 V
32 -13 V
32 -21 V
32 -30 V
32 -35 V
32 -39 V
32 -42 V
32 -43 V
32 -42 V
32 -40 V
32 -36 V
32 -31 V
32 -24 V
32 -18 V
32 -10 V
32 -1 V
32 6 V
32 15 V
32 22 V
32 28 V
32 34 V
32 39 V
32 41 V
32 43 V
32 43 V
31 40 V
32 37 V
32 32 V
32 25 V
32 16 V
32 6 V
32 -4 V
32 -17 V
32 -31 V
32 -44 V
32 -59 V
32 -75 V
32 -89 V
32 -106 V
32 -120 V
32 -136 V
32 -150 V
32 -164 V
32 -177 V
32 -188 V
32 -198 V
32 -206 V
32 -213 V
32 -218 V
32 -219 V
32 -219 V
32 -216 V
32 -209 V
32 -198 V
32 -184 V
32 -164 V
32 -139 V
32 -104 V
32 -57 V
32 20 V
32 81 V
32 122 V
32 151 V
32 174 V
32 192 V
31 204 V
32 212 V
32 218 V
32 219 V
32 219 V
32 216 V
32 210 V
32 203 V
32 193 V
32 183 V
32 171 V
32 157 V
32 144 V
32 128 V
32 114 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LTb
0.00 0.62 0.45 C LCb setrgbcolor
6416 4652 M
[ [(Helvetica) 120.0 0.0 true true 0 (extrapolated from ibmq valencia)]
] -40.0 MRshow
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C 6488 4652 M
351 0 V
-351 31 R
0 -62 V
351 62 R
0 -62 V
588 951 M
160 471 V
908 2447 L
160 1021 V
160 783 V
159 116 V
160 137 V
160 -209 V
160 -147 V
160 193 V
160 -121 V
160 500 V
160 -172 V
159 -203 V
160 -811 V
160 -941 V
160 -846 V
3306 971 L
160 69 V
160 789 V
160 1147 V
159 870 V
160 476 V
160 375 V
160 -207 V
160 -330 V
160 -282 V
160 376 V
160 22 V
159 374 V
160 66 V
160 -556 V
160 -950 V
160 -934 V
6024 1160 L
160 -132 V
160 347 V
159 747 V
160 1158 V
160 837 V
588 930 M
0 42 V
0 -42 R
31 0 V
-31 42 R
31 0 V
129 413 R
0 75 V
-31 -75 R
62 0 V
-62 75 R
62 0 V
129 940 R
0 94 V
-31 -94 R
62 0 V
-62 94 R
62 0 V
129 830 R
0 288 V
-31 -288 R
62 0 V
-62 288 R
62 0 V
129 513 R
0 251 V
-31 -251 R
62 0 V
-62 251 R
62 0 V
128 -129 R
0 240 V
-31 -240 R
62 0 V
-62 240 R
62 0 V
129 -94 R
0 223 V
-31 -223 R
62 0 V
-62 223 R
62 0 V
129 -335 R
0 28 V
-31 -28 R
62 0 V
-62 28 R
62 0 V
129 -235 R
0 148 V
-31 -148 R
62 0 V
-62 148 R
62 0 V
129 92 R
0 53 V
-31 -53 R
62 0 V
-62 53 R
62 0 V
129 -264 R
0 233 V
-31 -233 R
62 0 V
-62 233 R
62 0 V
129 328 R
0 111 V
-31 -111 R
62 0 V
-62 111 R
62 0 V
129 -295 R
0 136 V
-31 -136 R
62 0 V
-62 136 R
62 0 V
128 -335 R
0 128 V
-31 -128 R
62 0 V
-62 128 R
62 0 V
129 -923 R
0 96 V
-31 -96 R
62 0 V
-62 96 R
62 0 V
2986 2494 M
0 197 V
-31 -197 R
62 0 V
-62 197 R
62 0 V
3146 1664 M
0 166 V
-31 -166 R
62 0 V
stroke 3177 1664 M
-62 166 R
62 0 V
3306 965 M
0 12 V
-31 -12 R
62 0 V
-62 12 R
62 0 V
129 24 R
0 78 V
-31 -78 R
62 0 V
-62 78 R
62 0 V
129 648 R
0 204 V
-31 -204 R
62 0 V
-62 204 R
62 0 V
129 964 R
0 161 V
-31 -161 R
62 0 V
-62 161 R
62 0 V
128 717 R
0 146 V
-31 -146 R
62 0 V
-62 146 R
62 0 V
129 315 R
0 176 V
-31 -176 R
62 0 V
-62 176 R
62 0 V
129 209 R
0 156 V
-31 -156 R
62 0 V
-62 156 R
62 0 V
129 -338 R
0 106 V
-31 -106 R
62 0 V
-62 106 R
62 0 V
129 -409 R
0 52 V
-31 -52 R
62 0 V
-62 52 R
62 0 V
129 -332 R
0 48 V
-31 -48 R
62 0 V
-62 48 R
62 0 V
129 312 R
0 81 V
-31 -81 R
62 0 V
-62 81 R
62 0 V
129 -186 R
0 333 V
-31 -333 R
62 0 V
-62 333 R
62 0 V
128 129 R
0 157 V
-31 -157 R
62 0 V
-62 157 R
62 0 V
129 -115 R
0 207 V
-31 -207 R
62 0 V
-62 207 R
62 0 V
129 -806 R
0 291 V
-31 -291 R
62 0 V
-62 291 R
62 0 V
5704 3125 M
0 170 V
-31 -170 R
62 0 V
-62 170 R
62 0 V
5864 2241 M
0 71 V
-31 -71 R
62 0 V
-62 71 R
62 0 V
stroke 5895 2312 M
6024 1123 M
0 73 V
-31 -73 R
62 0 V
-62 73 R
62 0 V
6184 998 M
0 61 V
-31 -61 R
62 0 V
-62 61 R
62 0 V
129 313 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
128 682 R
0 123 V
-31 -123 R
62 0 V
-62 123 R
62 0 V
129 1079 R
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
129 787 R
0 65 V
-31 -65 R
62 0 V
-62 65 R
62 0 V
588 951 Crs
748 1422 Crs
908 2447 Crs
1068 3468 Crs
1228 4251 Crs
1387 4367 Crs
1547 4504 Crs
1707 4295 Crs
1867 4148 Crs
2027 4341 Crs
2187 4220 Crs
2347 4720 Crs
2507 4548 Crs
2666 4345 Crs
2826 3534 Crs
2986 2593 Crs
3146 1747 Crs
3306 971 Crs
3466 1040 Crs
3626 1829 Crs
3786 2976 Crs
3945 3846 Crs
4105 4322 Crs
4265 4697 Crs
4425 4490 Crs
4585 4160 Crs
4745 3878 Crs
4905 4254 Crs
5065 4276 Crs
5224 4650 Crs
5384 4716 Crs
5544 4160 Crs
5704 3210 Crs
5864 2276 Crs
6024 1160 Crs
6184 1028 Crs
6344 1375 Crs
6503 2122 Crs
6663 3280 Crs
6823 4117 Crs
6663 4652 Crs
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
588 4895 N
588 384 L
6395 0 V
0 4511 V
-6395 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
