%!PS-Adobe-2.0 EPSF-2.0
%%Title: valencia_mutual_information10.eps
%%Creator: gnuplot 5.0 patchlevel 6
%%CreationDate: Fri Aug  7 19:22:43 2020
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (valencia_mutual_information10.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 6)
  /Author (francescocarnazza)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Aug  7 19:22:43 2020)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
588 384 M
63 0 V
6332 0 R
-63 0 V
stroke
516 384 M
[ [(Helvetica) 120.0 0.0 true true 0 (-0.2)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 948 M
63 0 V
6332 0 R
-63 0 V
stroke
516 948 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 1512 M
63 0 V
6332 0 R
-63 0 V
stroke
516 1512 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 2076 M
63 0 V
6332 0 R
-63 0 V
stroke
516 2076 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 2640 M
63 0 V
6332 0 R
-63 0 V
stroke
516 2640 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 3203 M
63 0 V
6332 0 R
-63 0 V
stroke
516 3203 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 3767 M
63 0 V
6332 0 R
-63 0 V
stroke
516 3767 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 4331 M
63 0 V
6332 0 R
-63 0 V
stroke
516 4331 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.2)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 4895 M
63 0 V
6332 0 R
-63 0 V
stroke
516 4895 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.4)]
] -40.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
588 384 M
0 63 V
0 4448 R
0 -63 V
stroke
588 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1228 384 M
0 63 V
0 4448 R
0 -63 V
stroke
1228 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1867 384 M
0 63 V
0 4448 R
0 -63 V
stroke
1867 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2507 384 M
0 63 V
0 4448 R
0 -63 V
stroke
2507 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3146 384 M
0 63 V
0 4448 R
0 -63 V
stroke
3146 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
3786 384 M
0 63 V
0 4448 R
0 -63 V
stroke
3786 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4425 384 M
0 63 V
0 4448 R
0 -63 V
stroke
4425 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.2)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5065 384 M
0 63 V
0 4448 R
0 -63 V
stroke
5065 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.4)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5704 384 M
0 63 V
0 4448 R
0 -63 V
stroke
5704 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.6)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
6343 384 M
0 63 V
0 4448 R
0 -63 V
stroke
6343 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1.8)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
6983 384 M
0 63 V
0 4448 R
0 -63 V
stroke
6983 264 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 2)]
] -40.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
588 4895 N
588 384 L
6395 0 V
0 4511 V
-6395 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
96 2639 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (mutual information)]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
3785 84 M
[ [(Helvetica) 120.0 0.0 true true 0 (time)]
] -40.0 MCshow
LTb
% Begin plot #1
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
6416 4772 M
[ [(Helvetica) 120.0 0.0 true true 0 (statevector)]
] -40.0 MRshow
1.000 UL
LTb
0.58 0.00 0.83 C 6488 4772 M
351 0 V
620 989 M
32 93 V
32 131 V
32 158 V
32 180 V
32 196 V
32 209 V
32 217 V
32 222 V
32 224 V
32 223 V
32 220 V
32 215 V
32 208 V
32 198 V
32 187 V
32 174 V
32 160 V
32 145 V
32 129 V
31 110 V
32 93 V
32 73 V
32 54 V
32 34 V
32 14 V
32 -6 V
32 -27 V
32 -47 V
32 -66 V
32 -86 V
32 -104 V
32 -123 V
32 -139 V
32 -154 V
32 -170 V
32 -182 V
32 -195 V
32 -204 V
32 -212 V
32 -219 V
32 -223 V
32 -224 V
32 -223 V
32 -219 V
32 -212 V
32 -201 V
32 -186 V
32 -167 V
32 -142 V
32 -108 V
32 -63 V
32 12 V
32 78 V
32 118 V
32 149 V
32 173 V
32 191 V
32 205 V
32 214 V
31 220 V
32 224 V
32 224 V
32 222 V
32 217 V
32 210 V
32 202 V
32 191 V
32 179 V
32 166 V
32 150 V
32 134 V
32 118 V
32 99 V
32 80 V
32 61 V
32 41 V
32 21 V
32 1 V
32 -19 V
32 -40 V
32 -59 V
32 -79 V
32 -98 V
32 -116 V
32 -133 V
32 -149 V
32 -164 V
32 -178 V
32 -190 V
32 -201 V
32 -210 V
32 -217 V
32 -221 V
32 -224 V
32 -224 V
32 -221 V
32 -214 V
32 -206 V
32 -192 V
31 -175 V
32 -151 V
32 -121 V
stroke 3881 1052 M
32 -81 V
32 -19 V
32 58 V
32 106 V
32 139 V
32 165 V
32 185 V
32 200 V
32 211 V
32 219 V
32 222 V
32 225 V
32 222 V
32 219 V
32 213 V
32 205 V
32 196 V
32 183 V
32 171 V
32 156 V
32 140 V
32 123 V
32 106 V
32 87 V
32 68 V
32 49 V
32 28 V
32 8 V
32 -12 V
32 -32 V
32 -53 V
32 -72 V
32 -91 V
32 -109 V
32 -127 V
32 -143 V
32 -159 V
31 -174 V
32 -186 V
32 -197 V
32 -207 V
32 -214 V
32 -220 V
32 -223 V
32 -224 V
32 -223 V
32 -217 V
32 -209 V
32 -198 V
32 -181 V
32 -161 V
32 -133 V
32 -97 V
32 -46 V
32 35 V
32 90 V
32 128 V
32 157 V
32 178 V
32 195 V
32 208 V
32 216 V
32 222 V
32 224 V
32 223 V
32 221 V
32 216 V
32 208 V
32 199 V
32 188 V
32 175 V
32 161 V
32 146 V
32 130 V
32 112 V
32 94 V
32 75 V
31 56 V
32 35 V
32 16 V
32 -5 V
32 -25 V
32 -46 V
32 -64 V
32 -85 V
32 -102 V
32 -121 V
32 -138 V
32 -153 V
32 -169 V
32 -181 V
32 -194 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LTb
0.00 0.62 0.45 C LCb setrgbcolor
6416 4652 M
[ [(Helvetica) 120.0 0.0 true true 0 (extrapolated from ibmq valencia)]
] -40.0 MRshow
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C 6488 4652 M
351 0 V
-351 31 R
0 -62 V
351 62 R
0 -62 V
588 940 M
160 236 V
160 720 V
160 878 V
160 506 V
159 219 V
160 -47 V
160 -553 V
160 -734 V
160 -731 V
2187 946 L
160 25 V
160 448 V
159 997 V
160 801 V
160 230 V
160 294 V
160 -353 V
160 -629 V
160 -702 V
160 -826 V
3945 955 L
160 390 V
160 750 V
160 801 V
160 412 V
160 281 V
160 -114 V
160 -493 V
159 -844 V
160 -588 V
5544 954 L
160 136 V
160 645 V
160 838 V
160 419 V
160 501 V
159 145 V
160 -205 V
160 -671 V
588 922 M
0 35 V
0 -35 R
31 0 V
-31 35 R
31 0 V
129 179 R
0 79 V
-31 -79 R
62 0 V
-62 79 R
62 0 V
129 568 R
0 226 V
877 1783 M
62 0 V
-62 226 R
62 0 V
129 700 R
0 130 V
-31 -130 R
62 0 V
-62 130 R
62 0 V
129 367 R
0 147 V
-31 -147 R
62 0 V
-62 147 R
62 0 V
128 95 R
0 102 V
-31 -102 R
62 0 V
-62 102 R
62 0 V
129 -128 R
0 60 V
-31 -60 R
62 0 V
-62 60 R
62 0 V
129 -658 R
0 150 V
-31 -150 R
62 0 V
-62 150 R
62 0 V
129 -890 R
0 161 V
-31 -161 R
62 0 V
-62 161 R
62 0 V
129 -853 R
0 85 V
-31 -85 R
62 0 V
-62 85 R
62 0 V
2187 930 M
0 32 V
-31 -32 R
62 0 V
-62 32 R
62 0 V
129 -20 R
0 59 V
-31 -59 R
62 0 V
-62 59 R
62 0 V
129 347 R
0 142 V
-31 -142 R
62 0 V
-62 142 R
62 0 V
128 877 R
0 99 V
-31 -99 R
62 0 V
-62 99 R
62 0 V
129 738 R
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
129 170 R
0 96 V
-31 -96 R
62 0 V
-62 96 R
62 0 V
stroke 3017 3495 M
129 162 R
0 169 V
-31 -169 R
62 0 V
-62 169 R
62 0 V
129 -475 R
0 74 V
-31 -74 R
62 0 V
-62 74 R
62 0 V
129 -724 R
0 116 V
-31 -116 R
62 0 V
-62 116 R
62 0 V
129 -778 R
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
129 -875 R
0 61 V
-31 -61 R
62 0 V
-62 61 R
62 0 V
3945 907 M
0 95 V
-31 -95 R
62 0 V
-62 95 R
62 0 V
129 290 R
0 106 V
-31 -106 R
62 0 V
-62 106 R
62 0 V
129 634 R
0 126 V
-31 -126 R
62 0 V
-62 126 R
62 0 V
129 688 R
0 100 V
-31 -100 R
62 0 V
-62 100 R
62 0 V
129 333 R
0 58 V
-31 -58 R
62 0 V
-62 58 R
62 0 V
129 226 R
0 53 V
-31 -53 R
62 0 V
-62 53 R
62 0 V
129 -158 R
0 34 V
-31 -34 R
62 0 V
-62 34 R
62 0 V
129 -571 R
0 123 V
-31 -123 R
62 0 V
-62 123 R
62 0 V
128 -950 R
0 88 V
-31 -88 R
62 0 V
-62 88 R
62 0 V
129 -701 R
0 138 V
-31 -138 R
62 0 V
-62 138 R
62 0 V
5544 941 M
0 27 V
-31 -27 R
62 0 V
-62 27 R
62 0 V
129 95 R
0 55 V
-31 -55 R
62 0 V
-62 55 R
62 0 V
129 580 R
0 75 V
stroke 5864 1773 M
-31 -75 R
62 0 V
-62 75 R
62 0 V
129 767 R
0 66 V
-31 -66 R
62 0 V
-62 66 R
62 0 V
129 307 R
0 158 V
-31 -158 R
62 0 V
-62 158 R
62 0 V
129 414 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
128 120 R
0 33 V
-31 -33 R
62 0 V
-62 33 R
62 0 V
129 -375 R
0 308 V
-31 -308 R
62 0 V
-62 308 R
62 0 V
129 -883 R
0 116 V
-31 -116 R
62 0 V
-62 116 R
62 0 V
588 940 Crs
748 1176 Crs
908 1896 Crs
1068 2774 Crs
1228 3280 Crs
1387 3499 Crs
1547 3452 Crs
1707 2899 Crs
1867 2165 Crs
2027 1434 Crs
2187 946 Crs
2347 971 Crs
2507 1419 Crs
2666 2416 Crs
2826 3217 Crs
2986 3447 Crs
3146 3741 Crs
3306 3388 Crs
3466 2759 Crs
3626 2057 Crs
3786 1231 Crs
3945 955 Crs
4105 1345 Crs
4265 2095 Crs
4425 2896 Crs
4585 3308 Crs
4745 3589 Crs
4905 3475 Crs
5065 2982 Crs
5224 2138 Crs
5384 1550 Crs
5544 954 Crs
5704 1090 Crs
5864 1735 Crs
6024 2573 Crs
6184 2992 Crs
6344 3493 Crs
6503 3638 Crs
6663 3433 Crs
6823 2762 Crs
6663 4652 Crs
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
588 4895 N
588 384 L
6395 0 V
0 4511 V
-6395 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
